[{"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\QuestionCreator\\Creator.js":"1","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\startPage\\Start.js":"2","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\App.js":"3","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\PanelUser\\User.js":"4","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\Highscore\\Highscore.js":"5","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\CreateGame\\CreateGame.js":"6","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\Timer\\Timer.js":"7","C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\QuizPage\\Quiz.js":"8"},{"size":4008,"mtime":1669321774816,"results":"9","hashOfConfig":"10"},{"size":1067,"mtime":1669229111700,"results":"11","hashOfConfig":"10"},{"size":1499,"mtime":1669150036344,"results":"12","hashOfConfig":"10"},{"size":2280,"mtime":1669231068159,"results":"13","hashOfConfig":"10"},{"size":1881,"mtime":1669148595362,"results":"14","hashOfConfig":"10"},{"size":2583,"mtime":1669322521123,"results":"15","hashOfConfig":"10"},{"size":560,"mtime":1669276082593,"results":"16","hashOfConfig":"10"},{"size":6914,"mtime":1669318150374,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wzbok",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\QuestionCreator\\Creator.js",["44","45"],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\startPage\\Start.js",["46"],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\App.js",["47","48"],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\PanelUser\\User.js",[],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\Highscore\\Highscore.js",["49","50"],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\CreateGame\\CreateGame.js",[],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\Timer\\Timer.js",["51","52","53","54","55","56"],[],"C:\\Users\\Wojtek\\Desktop\\projectINZ\\learning_helper_tool\\client\\src\\components\\QuizPage\\Quiz.js",["57","58","59","60","61","62","63","64","65"],[],"import './Quiz.css';\r\nimport BackGround from '../UI/BackGround';\r\nimport Loading from '../LoadingPage/Loading';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRef } from 'react';\r\n// import Timer from '../Timer/Timer';\r\n\r\nconst Quiz = () => {\r\n\tlet history = useHistory();\r\n\r\n\tconst queryParams = new URLSearchParams(window.location.search);\r\n\tconst API_ENDPOINT = 'http://localhost:5000/';\r\n\tconst urlCateg = queryParams.get('quizcode');\r\n\tconsole.log(urlCateg);\r\n\tconst url =\r\n\t\t'http://localhost:5000/questions/getqueswithcode?quiz_code=' + urlCateg;\r\n\r\n\tlet url2 = 'http://localhost:5000/sendscore';\r\n\r\n\tconst [waiting, setWaiting] = useState(true);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [questionsFetched, setQuestionsFetched] = useState([]);\r\n\tconst [correctAnswer, setCorrect] = useState();\r\n\tconst [answersState, setAnswers] = useState([]);\r\n\tconst [index, setIndex] = useState(0);\r\n\tconst [countCorrectAnswer, setCountCorrectAnswer] = useState(0);\r\n\tconst [questionContent, setContent] = useState('');\r\n\tconst [endQuiz, setEndQuiz] = useState(false);\r\n\tconst [user_id, setUserId] = useState(0);\r\n\tconst [quizId, setQuizId] = useState(0);\r\n\t//nowy\r\n\tconst [counter, setCounter] = useState(20);\r\n\r\n\tconst fetchQuestions = async (API_ENDPOINT) => {\r\n\t\tconst response = await axios.post(url).catch((err) => console.log(err));\r\n\t\tif (response) {\r\n\t\t\tconst data = response.data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tsetQuestionsFetched(response.data);\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetWaiting(false);\r\n\t\t\t\tsetError(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetWaiting(true);\r\n\t\t\t\tsetError(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetWaiting(true);\r\n\t\t}\r\n\t\tconst getCode = await axios\r\n\t\t\t.get('http://localhost:5000/quiz/getQuizId?quiz_code=' + urlCateg)\r\n\t\t\t.catch((err) => console.log(err));\r\n\t\tif (getCode) {\r\n\t\t\tconst data = getCode.data;\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t\tsetQuizId(getCode.data[0].id);\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetWaiting(false);\r\n\t\t\t\tsetError(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetWaiting(true);\r\n\t\t\t\tsetError(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetWaiting(true);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchQuestions();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (typeof questionsFetched[index] !== 'undefined') {\r\n\t\t\tsetContent(questionsFetched[index].question_content);\r\n\t\t\tlet answers = [];\r\n\t\t\tconst answer1 = {\r\n\t\t\t\tanswer: questionsFetched[index].answer_1,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t};\r\n\t\t\tconst answer2 = {\r\n\t\t\t\tanswer: questionsFetched[index].answer_2,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t};\r\n\t\t\tconst answer3 = {\r\n\t\t\t\tanswer: questionsFetched[index].answer_3,\r\n\t\t\t\tisCorrect: false,\r\n\t\t\t};\r\n\t\t\tconst answer4 = {\r\n\t\t\t\tanswer: questionsFetched[index].answer_correct,\r\n\t\t\t\tisCorrect: true,\r\n\t\t\t};\r\n\t\t\tanswers.push(answer1);\r\n\t\t\tanswers.push(answer2);\r\n\t\t\tanswers.push(answer3);\r\n\t\t\tanswers.push(answer4);\r\n\t\t\tconsole.log(answers);\r\n\t\t\tanswers.sort(() => Math.random() - 0.5);\r\n\t\t\tsetCorrect(\r\n\t\t\t\tanswers.findIndex(\r\n\t\t\t\t\t(element) => element === questionsFetched[index].answer_correct\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tsetAnswers(answers);\r\n\t\t}\r\n\t}, [questionsFetched[index], index]);\r\n\r\n\t//TIMER\r\n\tuseEffect(() => {\r\n\t\tif (counter > 0) {\r\n\t\t\tsetTimeout(() => setCounter(counter - 1), 1000);\r\n\t\t} else {\r\n\t\t\tsetEndQuiz(true);\r\n\t\t}\r\n\t}, [counter]);\r\n\r\n\tconst nextQuestion = () => {\r\n\t\tif (index >= questionsFetched.length - 1) {\r\n\t\t\tsetEndQuiz(true);\r\n\t\t\treturn 0;\r\n\t\t} else {\r\n\t\t\tconsole.log(index, 'NEXT QUESTION');\r\n\t\t\tsetIndex(index + 1);\r\n\t\t\treturn index;\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkAnswer = (e) => {\r\n\t\tif (e.target.classList.contains('answerCorrect')) {\r\n\t\t\tsetCountCorrectAnswer(countCorrectAnswer + 1);\r\n\t\t\tconsole.log(`PUNKT ${countCorrectAnswer}`);\r\n\t\t}\r\n\t\tnextQuestion();\r\n\t};\r\n\r\n\tconst handleBack = function () {\r\n\t\tsessionStorage.getItem('username') === null\r\n\t\t\t? history.push('/')\r\n\t\t\t: history.push('/user');\r\n\t};\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<BackGround />\r\n\t\t\t\t<Loading />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\tif (endQuiz) {\r\n\t\t\tif (sessionStorage.getItem('id') != null) {\r\n\t\t\t\tfetch(url2, {\r\n\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t//dodac inne potrzebne rzeczy do wyslania do db (np. login, numer quizu)\r\n\t\t\t\t\t\tscore: countCorrectAnswer,\r\n\t\t\t\t\t\ttakenby: parseInt(sessionStorage.getItem('id')),\r\n\t\t\t\t\t\tquiz_id: quizId,\r\n\t\t\t\t\t\tmaxScore: questionsFetched.length,\r\n\t\t\t\t\t}),\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t}).then((response) => response.json());\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav className='nav'></nav>\r\n\t\t\t\t\t<main className='main-container-container'>\r\n\t\t\t\t\t\t<div className='main-container-quiz1'>\r\n\t\t\t\t\t\t\t<div className='container-title'>Uzyskana liczba punktów:</div>\r\n\t\t\t\t\t\t\t<div className='container-score'>\r\n\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t{countCorrectAnswer}/{questionsFetched.length}\r\n\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='container-text'>\r\n\t\t\t\t\t\t\t\t{(() => {\r\n\t\t\t\t\t\t\t\t\tif (countCorrectAnswer < 5) {\r\n\t\t\t\t\t\t\t\t\t\treturn <h3 className='container-text-result'>Słabiutko</h3>;\r\n\t\t\t\t\t\t\t\t\t} else if (countCorrectAnswer < 5 && correctAnswer <= 7) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='container-text-result'>Nie jest źle</h3>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='container-text-result'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tGratuluje wyniku\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='container-quiz-btn'>\r\n\t\t\t\t\t\t\t\t<Link className='text-link' onClick={handleBack}>\r\n\t\t\t\t\t\t\t\t\t<button className='btn-join'>Powrót</button>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className='nav'></nav>\r\n\t\t\t\t<main className='main-container-quiz2'>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<div className='justify-center flex-column'>\r\n\t\t\t\t\t\t\t<div className='container-score-question'>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\tPoprawnych {countCorrectAnswer} /{questionsFetched.length}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\tPytanie {index} z {questionsFetched.length}\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h2 className='question'>{questionContent}</h2>\r\n\r\n\t\t\t\t\t\t\t{answersState.map((answer, index) => (\r\n\t\t\t\t\t\t\t\t<div className='choice-container'>\r\n\t\t\t\t\t\t\t\t\t<p className='choice-prefix'>{index + 1}</p>\r\n\t\t\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\t\t\tclassName={`choice-text ${\r\n\t\t\t\t\t\t\t\t\t\t\tanswer.isCorrect && 'answerCorrect'\r\n\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\tonClick={checkAnswer}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{answer.answer}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t<button onClick={nextQuestion} className='btn-next'>\r\n\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t\t<div className='quiz-timer'>\r\n\t\t\t\t\t<span>{counter}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <Timer maxRange={10} /> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Quiz;\r\n",[],{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"71","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"66","severity":1,"message":"72","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":25},{"ruleId":"66","severity":1,"message":"73","line":11,"column":26,"nodeType":"68","messageId":"69","endLine":11,"endColumn":31},{"ruleId":"66","severity":1,"message":"70","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":3,"column":16,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"75","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":19},{"ruleId":"66","severity":1,"message":"76","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":20},{"ruleId":"66","severity":1,"message":"77","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"78","line":7,"column":18,"nodeType":"68","messageId":"69","endLine":7,"endColumn":28},{"ruleId":"66","severity":1,"message":"79","line":8,"column":9,"nodeType":"68","messageId":"69","endLine":8,"endColumn":16},{"ruleId":"66","severity":1,"message":"80","line":8,"column":18,"nodeType":"68","messageId":"69","endLine":8,"endColumn":28},{"ruleId":"66","severity":1,"message":"81","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":16},{"ruleId":"66","severity":1,"message":"82","line":15,"column":8,"nodeType":"68","messageId":"69","endLine":15,"endColumn":20},{"ruleId":"66","severity":1,"message":"83","line":23,"column":9,"nodeType":"68","messageId":"69","endLine":23,"endColumn":16},{"ruleId":"66","severity":1,"message":"84","line":25,"column":9,"nodeType":"68","messageId":"69","endLine":25,"endColumn":14},{"ruleId":"66","severity":1,"message":"85","line":33,"column":9,"nodeType":"68","messageId":"69","endLine":33,"endColumn":16},{"ruleId":"66","severity":1,"message":"86","line":33,"column":18,"nodeType":"68","messageId":"69","endLine":33,"endColumn":27},{"ruleId":"87","severity":1,"message":"88","line":77,"column":5,"nodeType":"89","endLine":77,"endColumn":7,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":112,"column":5,"nodeType":"89","endLine":112,"endColumn":37,"suggestions":"92"},{"ruleId":"87","severity":1,"message":"93","line":112,"column":6,"nodeType":"94","endLine":112,"endColumn":29},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'BackGround' is defined but never used.","'useState' is defined but never used.","'toast' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Quiz' is defined but never used.","'setCounter' is assigned a value but never used.","'endQuiz' is assigned a value but never used.","'setEndQuiz' is assigned a value but never used.","'useRef' is defined but never used.","'API_ENDPOINT' is assigned a value but never used.","'waiting' is assigned a value but never used.","'error' is assigned a value but never used.","'user_id' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'questionsFetched'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setContent' needs the current value of 'questionsFetched'.",["96"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [fetchQuestions]",{"range":"101","text":"102"},"Update the dependencies array to be: [index, questionsFetched]",{"range":"103","text":"104"},[2298,2300],"[fetchQuestions]",[3201,3233],"[index, questionsFetched]"]